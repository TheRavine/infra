- name: create additional docker config dirs
  file:
    path: '{{ item }}'
    state: directory
  with_items:
    - /srv/docker
    - /srv/docker/venv

- name: add docker signing key
  apt_key:
    url: https://download.docker.com/linux/debian/gpg
    id: 9DC858229FC7DD38854AE2D88D81803C0EBFCD88
    state: present

- name: add docker repo
  apt_repository:
    repo: 'deb https://download.docker.com/linux/{{ ansible_distribution|lower }} {{ ansible_distribution_release }} stable'
    state: present
    filename: docker

- name: install docker and dependencies
  apt:
    state: present
    pkg:
      - docker-ce
      - python3-docker

- name: create docker group
  group: name=docker system=true state=present

- name: start docker
  service: name=docker state=started enabled=yes

- name: create root docker config directory
  file:
    path: /root/.docker
    state: directory

- name: create docker daemon config file
  template:
    src: 'daemon.json'
    dest: /etc/docker/daemon.json
  notify:
    - restart docker

- name: ensure watchtower is not running
  docker_container:
    name: watchtower
    state: absent

# - name: start watchtower
#   docker_container:
#     name: watchtower
#     image: containrrr/watchtower
#     restart_policy: on-failure
#     mounts:
#       - type: bind
#         source: /var/run/docker.sock
#         target: /var/run/docker.sock
#     env:
#       WATCHTOWER_CLEANUP: 'true'
#       WATCHTOWER_POLL_INTERVAL: '{{ watchtower_interval }}'
#   vars:
#     ansible_python_interpreter: "/usr/bin/env python-docker"
