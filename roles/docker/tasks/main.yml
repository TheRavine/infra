- name: create additional docker config dirs
  file:
    path: '{{ item }}'
    state: directory
  with_items:
    - /srv/docker
    - /srv/docker/venv

- name: add docker signing key
  apt_key:
    url: https://download.docker.com/linux/debian/gpg
    id: 9DC858229FC7DD38854AE2D88D81803C0EBFCD88
    state: present

- name: add docker repo
  apt_repository:
    repo: 'deb https://download.docker.com/linux/debian {{ ansible_distribution_release }} stable'
    state: present
    filename: docker

- name: install docker and dependencies
  apt:
    state: present
    pkg:
      - docker-ce

- name: install docker python packages
  pip:
    name:
      - docker
      - docker-compose
    virtualenv: /srv/docker/venv

- name: symlink python binary to /usr/local/bin/python-docker
  file:
    path: "/usr/local/bin/python-docker"
    src: "/srv/docker/venv/bin/python"
    state: "link"

- name: symlink selected python package binaries to /usr/local/bin
  file:
    path: "/usr/local/bin/{{ item }}"
    src: "/srv/docker/venv/bin/{{ item }}"
    state: "link"
  with_items:
    - docker-compose

- name: create docker group
  group: name=docker system=true state=present

- name: start docker
  service: name=docker state=started enabled=yes

- name: create root docker config directory
  file:
    path: /root/.docker
    state: directory

- name: start watchtower
  docker_container:
    name: watchtower
    image: containrrr/watchtower
    restart_policy: on-failure
    mounts:
      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock
    env:
      WATCHTOWER_CLEANUP: 'true'
      WATCHTOWER_POLL_INTERVAL: '{{ watchtower_interval }}'
  vars:
    ansible_python_interpreter: "/usr/bin/env python-docker"
